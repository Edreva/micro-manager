/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package ch.epfl.leb.autolase;

import java.awt.Color;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.JSeparator;
import javax.swing.JSlider;
import javax.swing.JTextField;
import javax.swing.JToggleButton;
import javax.swing.LayoutStyle;
import javax.swing.SwingConstants;
import javax.swing.WindowConstants;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 * @author pengo
 */
public class AutoLaseDialog extends JDialog
      implements DensityMonitor, LaserPowerMonitor {
   public static final int DENSITY_STEPS = 1000;

   AutoLase autoLase;

   AutoLaseOptionsDialog alg;

   LaserConfig lc;

   Camera mmcoreCamera;


   /**
    * Creates new form AutoLaseDialog
    */
   public AutoLaseDialog(java.awt.Frame parent, boolean modal, AutoLase autoLase) {
      super(parent, modal);
      initComponents();

      this.autoLase = autoLase;
      mmcoreCamera = autoLase.getCamera();

      autoLase.addDensityMonitor(this);
      autoLase.addLaserPowerMonitor(this);

      jpbDensity.setMaximum(DENSITY_STEPS);
   }

   double maxDensity = 0;
   double curDensity = 0;

   @Override
   public void densityChanged(double density) {
      curDensity = density;

      if (maxDensity < density) {
         setMaxDensity(density);
      }

      int v = (int) (density / maxDensity * DENSITY_STEPS);

      jpbDensity.setValue(v);
      jlCurrentDensity.setText(String.valueOf(density));
   }

   void setMaxDensity(double density) {
      maxDensity = density;
      jlMaxDensity.setText(String.valueOf(maxDensity));
   }

   double curLaserPower = 0;

   @Override
   public void laserPowerChanged(double newLaserPower) {
      jlCurLaserPower.setText(String.format("%7.2f", newLaserPower));
   }


   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      jpbDensity = new JProgressBar();
      jlMaxDensity = new JLabel();
      jlMinDensity = new JLabel();
      jbPreBleach = new JButton();
      jLabel1 = new JLabel();
      jLabel2 = new JLabel();
      jLabel3 = new JLabel();
      jLabel6 = new JLabel();
      jtfThreshold = new JTextField();
      jsThreshold = new JSlider();
      jToggleButton1 = new JToggleButton();
      jLabel8 = new JLabel();
      jlCurrentDensity = new JLabel();
      jSeparator1 = new JSeparator();
      jbImageMeanThreshold = new JButton();
      jcbDensityMap = new JCheckBox();
      jLabel9 = new JLabel();
      jtfMinGoodDensity = new JTextField();
      jLabel10 = new JLabel();
      jtfMaxGoodDensity = new JTextField();
      jbOptions = new JButton();
      jtAutoLase = new JToggleButton();
      jSeparator2 = new JSeparator();
      jLabel4 = new JLabel();
      jlCurLaserPower = new JLabel();
      jbLaserStartVal = new JButton();
      jSeparator3 = new JSeparator();
      jToggleButton2 = new JToggleButton();
      jButtonLogFile = new JButton();
      jcbDensityProfile = new JCheckBox();

      setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

      jpbDensity.setOrientation(1);

      jlMaxDensity.setHorizontalAlignment(SwingConstants.TRAILING);
      jlMaxDensity.setText("0");
      jlMaxDensity.addMouseListener(new java.awt.event.MouseAdapter() {
         public void mouseClicked(java.awt.event.MouseEvent evt) {
            jlMaxDensityMouseClicked(evt);
         }
      });

      jlMinDensity.setText("0");

      jbPreBleach.setText("Pre-bleach");
      jbPreBleach.setEnabled(false);
      jbPreBleach.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jbPreBleachActionPerformed(evt);
         }
      });

      jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
      jLabel1.setText("AutoLase");

      jLabel2.setText("Automated single-molecule density control via laser");

      jLabel3.setText("Density");

      jLabel6.setText("Image threshold");

      jtfThreshold.setHorizontalAlignment(JTextField.TRAILING);
      jtfThreshold.setText("500");
      jtfThreshold.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jtfThresholdActionPerformed(evt);
         }
      });

      jsThreshold.setMaximum(16384);
      jsThreshold.setValue(500);
      jsThreshold.addChangeListener(new ChangeListener() {
         public void stateChanged(ChangeEvent evt) {
            jsThresholdStateChanged(evt);
         }
      });

      jToggleButton1.setText("Monitor");
      jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jToggleButton1ActionPerformed(evt);
         }
      });

      jLabel8.setText("Current density");

      jlCurrentDensity.setHorizontalAlignment(SwingConstants.TRAILING);
      jlCurrentDensity.setText("0");

      jbImageMeanThreshold.setText("Auto");
      jbImageMeanThreshold.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jbImageMeanThresholdActionPerformed(evt);
         }
      });

      jcbDensityMap.setText("Show density map");
      jcbDensityMap.addItemListener(new java.awt.event.ItemListener() {
         public void itemStateChanged(java.awt.event.ItemEvent evt) {
            jcbDensityMapItemStateChanged(evt);
         }
      });

      jLabel9.setText("Good density from ");

      jtfMinGoodDensity.setHorizontalAlignment(JTextField.TRAILING);
      jtfMinGoodDensity.setText("100");
      jtfMinGoodDensity.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jtfMinGoodDensityActionPerformed(evt);
         }
      });

      jLabel10.setText("to");

      jtfMaxGoodDensity.setHorizontalAlignment(JTextField.TRAILING);
      jtfMaxGoodDensity.setText("200");
      jtfMaxGoodDensity.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jtfMaxGoodDensityActionPerformed(evt);
         }
      });

      jbOptions.setText("Laser Options");
      jbOptions.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jbOptionsActionPerformed(evt);
         }
      });

      jtAutoLase.setForeground(new java.awt.Color(255, 0, 0));
      jtAutoLase.setText("AutoLase!");
      jtAutoLase.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jtAutoLaseActionPerformed(evt);
         }
      });

      jLabel4.setText("Current laser power");

      jlCurLaserPower.setHorizontalAlignment(SwingConstants.TRAILING);
      jlCurLaserPower.setText("0");

      jbLaserStartVal.setText("Laser = Default");
      jbLaserStartVal.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jbLaserStartValActionPerformed(evt);
         }
      });

      jToggleButton2.setText("Use TIFF...");
      jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jToggleButton2ActionPerformed(evt);
         }
      });

      jButtonLogFile.setText("Start log file");
      jButtonLogFile.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButtonLogFileActionPerformed(evt);
         }
      });

      jcbDensityProfile.setText("Show density profile");
      jcbDensityProfile.addItemListener(new java.awt.event.ItemListener() {
         public void itemStateChanged(java.awt.event.ItemEvent evt) {
            jcbDensityProfileItemStateChanged(evt);
         }
      });

      GroupLayout layout = new GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                  .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                  .addContainerGap()
                  .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                  .addGroup(layout.createSequentialGroup()
                  .addComponent(jLabel1)
                  .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED,
                                   GroupLayout.DEFAULT_SIZE,
                                   Short.MAX_VALUE)
                  .addComponent(jLabel3))
                  .addGroup(layout.createSequentialGroup()
                  .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                  .addGroup(layout.createSequentialGroup()
                  .addComponent(jLabel2)
                  .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED,
                                  GroupLayout.DEFAULT_SIZE,
                                  Short.MAX_VALUE)
                  .addComponent(jlMaxDensity, GroupLayout.PREFERRED_SIZE, 67,
                                GroupLayout.PREFERRED_SIZE))
                  .addGroup(layout.createSequentialGroup()
                  .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                  .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                  .addComponent(jSeparator2)
                  .addGap(8, 8, 8))
                  .addGroup(layout.createSequentialGroup()
                  .addComponent(jbOptions, GroupLayout.PREFERRED_SIZE, 126,
                        GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED,
                                   GroupLayout.DEFAULT_SIZE,
                                   Short.MAX_VALUE)
                  .addComponent(jbPreBleach)
                  .addGap(39, 39, 39)
                  .addComponent(jtAutoLase)
                  .addGap(16, 16, 16))
                  .addGroup(layout.createSequentialGroup()
                  .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup().addComponent(jLabel4)
                              .addGap(18, 18, 18)
                              .addComponent(jlCurLaserPower, GroupLayout.PREFERRED_SIZE, 69,
                                    GroupLayout.PREFERRED_SIZE)
                              .addGap(18, 18, 18)
                              .addComponent(jbLaserStartVal))
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                              .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButtonLogFile)
                                    .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jToggleButton2))
                              .addComponent(jSeparator3, GroupLayout.PREFERRED_SIZE, 377,
                                    GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(10, 10, 10)
                        .addComponent(jlMinDensity))
                        .addGroup(layout.createSequentialGroup()
                              .addGroup(layout.createParallelGroup(
                                    GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                          .addGroup(layout.createParallelGroup(
                                                GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel6)
                                                .addComponent(jLabel8))
                                          .addGroup(layout.createParallelGroup(
                                                GroupLayout.Alignment.LEADING)
                                                .addGroup(
                                                      layout.createSequentialGroup()
                                                            .addGap(18, 18, 18)
                                                            .addComponent(jlCurrentDensity,
                                                                  GroupLayout.PREFERRED_SIZE,
                                                                  88,
                                                                  GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createSequentialGroup()
                                                      .addGap(17, 17, 17)
                                                      .addComponent(jtfThreshold,
                                                            GroupLayout.PREFERRED_SIZE,
                                                            89,
                                                            GroupLayout.PREFERRED_SIZE)
                                                      .addPreferredGap(
                                                            LayoutStyle.ComponentPlacement.RELATED)
                                                      .addComponent(jbImageMeanThreshold,
                                                            GroupLayout.PREFERRED_SIZE,
                                                            90,
                                                            GroupLayout.PREFERRED_SIZE)
                                                      .addPreferredGap(
                                                            LayoutStyle.ComponentPlacement.RELATED)
                                                      .addComponent(
                                                            jsThreshold,
                                                            GroupLayout.PREFERRED_SIZE,
                                                            107,
                                                            GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(jSeparator1, GroupLayout.PREFERRED_SIZE, 371,
                                          GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                          .addComponent(jLabel9)
                                          .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                          .addComponent(jtfMinGoodDensity,
                                                GroupLayout.PREFERRED_SIZE,
                                                35,
                                                GroupLayout.PREFERRED_SIZE)
                                          .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                          .addComponent(jLabel10)
                                          .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                          .addComponent(jtfMaxGoodDensity,
                                                GroupLayout.PREFERRED_SIZE,
                                                37,
                                                GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                          .addComponent(jToggleButton1,
                                                GroupLayout.PREFERRED_SIZE, 70,
                                                GroupLayout.PREFERRED_SIZE)
                                          .addPreferredGap(
                                                LayoutStyle.ComponentPlacement.UNRELATED)
                                          .addGroup(
                                                layout.createParallelGroup(
                                                      GroupLayout.Alignment.LEADING)
                                                      .addComponent(jcbDensityProfile)
                                                      .addComponent(jcbDensityMap))))
                              .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jpbDensity, GroupLayout.PREFERRED_SIZE,
                              GroupLayout.DEFAULT_SIZE,
                              GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
      );
      layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                  .addGroup(layout.createSequentialGroup().addContainerGap()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                              .addComponent(jLabel1)
                              .addComponent(jLabel3))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                              .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(
                                          GroupLayout.Alignment.BASELINE)
                                          .addComponent(jLabel2)
                                          .addComponent(jlMaxDensity,
                                                      GroupLayout.DEFAULT_SIZE,
                                                      GroupLayout.DEFAULT_SIZE,
                                                      Short.MAX_VALUE))
                                          .addPreferredGap(
                                                LayoutStyle.ComponentPlacement.RELATED)
                                          .addComponent(jSeparator1,
                                                GroupLayout.PREFERRED_SIZE, 5,
                                                GroupLayout.PREFERRED_SIZE)
                                          .addGap(7, 7, 7)
                                          .addGroup(layout.createParallelGroup(
                                                      GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel8)
                                                .addComponent(jlCurrentDensity))
                                          .addPreferredGap(
                                                LayoutStyle.ComponentPlacement.UNRELATED)
                                          .addGroup(layout.createParallelGroup(
                                                      GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createParallelGroup(
                                                            GroupLayout.Alignment.BASELINE)
                                                      .addComponent(jLabel6)
                                                      .addComponent(jtfThreshold,
                                                            GroupLayout.PREFERRED_SIZE,
                                                            GroupLayout.DEFAULT_SIZE,
                                                            GroupLayout.PREFERRED_SIZE)
                                                      .addComponent(jbImageMeanThreshold))
                                                .addComponent(jsThreshold,
                                                      GroupLayout.PREFERRED_SIZE,
                                                      GroupLayout.DEFAULT_SIZE,
                                                      GroupLayout.PREFERRED_SIZE))
                                          .addGap(3, 3, 3)
                                          .addGroup(layout.createParallelGroup(
                                                      GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel9)
                                                .addComponent(jtfMinGoodDensity,
                                                      GroupLayout.PREFERRED_SIZE,
                                                      GroupLayout.DEFAULT_SIZE,
                                                      GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel10)
                                                .addComponent(jtfMaxGoodDensity,
                                                      GroupLayout.PREFERRED_SIZE,
                                                      GroupLayout.DEFAULT_SIZE,
                                                      GroupLayout.PREFERRED_SIZE))
                                          .addGap(5, 5, 5)
                                          .addGroup(layout.createParallelGroup(
                                                      GroupLayout.Alignment.BASELINE)
                                                .addComponent(jToggleButton1)
                                                .addComponent(jcbDensityMap))
                                          .addGroup(layout.createParallelGroup(
                                                      GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                      .addGap(60, 60, 60)
                                                      .addComponent(jlMinDensity)
                                                      .addGap(64, 64, 64))
                                                .addGroup(
                                                      GroupLayout.Alignment.TRAILING,
                                                      layout.createSequentialGroup()
                                                            .addPreferredGap(
                                                                  LayoutStyle.ComponentPlacement
                                                                        .RELATED)
                                                            .addComponent(jcbDensityProfile)
                                                            .addGap(4, 4, 4)
                                                            .addComponent(jSeparator2,
                                                                  GroupLayout.PREFERRED_SIZE,
                                                                  GroupLayout.DEFAULT_SIZE,
                                                                  GroupLayout.PREFERRED_SIZE)
                                                            .addGap(1, 1, 1)
                                                            .addGroup(layout.createParallelGroup(
                                                                        GroupLayout.Alignment
                                                                              .BASELINE)
                                                                  .addComponent(jLabel4)
                                                                  .addComponent(jlCurLaserPower)
                                                                  .addComponent(jbLaserStartVal))
                                                            .addPreferredGap(
                                                                  LayoutStyle.ComponentPlacement
                                                                        .UNRELATED)
                                                            .addGroup(layout.createParallelGroup(
                                                                        GroupLayout.Alignment
                                                                              .BASELINE)
                                                                  .addComponent(jtAutoLase)
                                                                  .addComponent(jbPreBleach)
                                                                  .addComponent(jbOptions))
                                                            .addPreferredGap(
                                                                  LayoutStyle.ComponentPlacement
                                                                        .UNRELATED)
                                                            .addComponent(jSeparator3,
                                                                  GroupLayout.PREFERRED_SIZE,
                                                                  10,
                                                                  GroupLayout.PREFERRED_SIZE)
                                                            .addPreferredGap(
                                                                  LayoutStyle.ComponentPlacement
                                                                        .RELATED)
                                                            .addGroup(layout.createParallelGroup(
                                                                        GroupLayout.Alignment
                                                                              .BASELINE)
                                                                  .addComponent(jToggleButton2)
                                                                  .addComponent(jButtonLogFile)))))
                                    .addComponent(jpbDensity, GroupLayout.DEFAULT_SIZE,
                                          282, Short.MAX_VALUE))
                        .addContainerGap())
      );

      pack();
   }

   private void jtfThresholdActionPerformed(
         java.awt.event.ActionEvent evt) {
      try {
         jsThreshold.setValue(Integer.valueOf(jtfThreshold.getText()));
      } catch (NumberFormatException ne) {
         JOptionPane.showMessageDialog(this,
               "Threshold must be between " + jsThreshold.getMinimum() + " and "
                     + jsThreshold.getMaximum());
      }
   }

   private void jbPreBleachActionPerformed(
         java.awt.event.ActionEvent evt) {
      // Put into pre-bleach mode

      // TODO turn off other components

      autoLase.preBleach();
   }

   private void jsThresholdStateChanged(
         ChangeEvent evt) {
      int threshold = jsThreshold.getValue();

      jtfThreshold.setText(
            String.valueOf(threshold));

      autoLase.setThreshold(threshold);
   }

   private void jToggleButton1ActionPerformed(
         java.awt.event.ActionEvent evt) {
      if (jToggleButton1.isSelected()) {
         autoLase.startDensityMonitor();
      } else {
         autoLase.pauseDensityMonitor();
      }
   }


   private void jlMaxDensityMouseClicked(
         java.awt.event.MouseEvent evt) {
      setMaxDensity(2 * curDensity);
   }

   private void jcbDensityMapItemStateChanged(
         java.awt.event.ItemEvent evt) {
      autoLase.showDensityMapMonitor(jcbDensityMap.isSelected());
   }

   private void jtfMaxGoodDensityActionPerformed(
         java.awt.event.ActionEvent evt) {
      try {
         autoLase.setMaxGoodDensity(Float.valueOf(jtfMaxGoodDensity.getText()));
         jtfMaxGoodDensity.setForeground(Color.BLACK);
      } catch (NumberFormatException e) {
         jtfMaxGoodDensity.setForeground(Color.RED);
      }
   }

   private void jtfMinGoodDensityActionPerformed(
         java.awt.event.ActionEvent evt) {
      try {
         autoLase.setMinGoodDensity(Float.valueOf(jtfMinGoodDensity.getText()));
         jtfMinGoodDensity.setForeground(Color.BLACK);
      } catch (NumberFormatException e) {
         jtfMinGoodDensity.setForeground(Color.RED);
      }
   }

   private void jbImageMeanThresholdActionPerformed(
         java.awt.event.ActionEvent evt) {
      int threshold = autoLase.getAutoThreshold();
      autoLase.setThreshold(threshold);
      jtfThreshold.setText(String.valueOf(threshold));
   }

   private void jbOptionsActionPerformed(
         java.awt.event.ActionEvent evt) {
      // Open configuration dialog
      if (alg == null) {
         alg = new AutoLaseOptionsDialog(autoLase.config, null, true);
      }

      alg.setVisible(true);
   }

   private void jtAutoLaseActionPerformed(
         java.awt.event.ActionEvent evt) {
      if (jtAutoLase.isSelected()) {
         autoLase.startLaserControl();
      } else {
         autoLase.pauseLaserControl();
      }
   }

   private void jbLaserStartValActionPerformed(
         java.awt.event.ActionEvent evt) {
      autoLase.setLaserToStartPower();
   }

   private void jToggleButton2ActionPerformed(
         java.awt.event.ActionEvent evt) {
      if (jToggleButton2.isSelected()) {
         // Use TIFF
         JFileChooser jfc = new JFileChooser();
         int ret = jfc.showOpenDialog(this);
         if (ret == JFileChooser.APPROVE_OPTION) {
            try {
               autoLase.setCamera(new TiffCamera(jfc.getSelectedFile()));
               jToggleButton2.setText("Use Camera");
            } catch (Exception e) {
               autoLase.log("Unable to set camera to read from "
                     + jfc.getSelectedFile().getAbsolutePath());
               jToggleButton2.setSelected(false);
            }
         }
      } else {
         // Reset to the saved camera
         autoLase.setCamera(mmcoreCamera);

         jToggleButton2.setText("Use TIFF...");
      }
   }

   private void jButtonLogFileActionPerformed(
         java.awt.event.ActionEvent evt) {
      if (!autoLase.logFileIsStarted) {
         autoLase.startLogFile();
         jButtonLogFile.setText("Stop logging");
      } else {
         autoLase.stopLogFile();
         jButtonLogFile.setText("Start log file");
      }

   }

   private void jcbDensityProfileItemStateChanged(
         java.awt.event.ItemEvent evt) {
      autoLase.showDensityProfileMonitor(jcbDensityProfile.isSelected());
   }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private JButton jButtonLogFile;
   private JLabel jLabel1;
   private JLabel jLabel10;
   private JLabel jLabel2;
   private JLabel jLabel3;
   private JLabel jLabel4;
   private JLabel jLabel6;
   private JLabel jLabel8;
   private JLabel jLabel9;
   private JSeparator jSeparator1;
   private JSeparator jSeparator2;
   private JSeparator jSeparator3;
   private JToggleButton jToggleButton1;
   private JToggleButton jToggleButton2;
   private JButton jbImageMeanThreshold;
   private JButton jbLaserStartVal;
   private JButton jbOptions;
   private JButton jbPreBleach;
   private JCheckBox jcbDensityMap;
   private JCheckBox jcbDensityProfile;
   private JLabel jlCurLaserPower;
   private JLabel jlCurrentDensity;
   private JLabel jlMaxDensity;
   private JLabel jlMinDensity;
   private JProgressBar jpbDensity;
   private JSlider jsThreshold;
   private JToggleButton jtAutoLase;
   private JTextField jtfMaxGoodDensity;
   private JTextField jtfMinGoodDensity;
   private JTextField jtfThreshold;
   // End of variables declaration//GEN-END:variables

   public void densityThreadStarted() {
      //DO NOTHING
   }

   public void densityThreadStopped() {
      //DO NOTHING
   }

   public void laserThreadStarted() {
      //DO NOTHING
   }

   public void laserThreadStopped() {
      //DO NOTHING
   }
}
